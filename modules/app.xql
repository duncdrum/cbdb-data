xquery version "3.1";

module namespace app="http://exist-db.org/apps/cbdb-data/templates";

import module namespace templates="http://exist-db.org/xquery/templates" ;
import module namespace config="http://exist-db.org/apps/cbdb-data/config" at "config.xqm";
import module namespace inspect="http://exist-db.org/xquery/inspection" at "java:org.exist.xquery.functions.inspect.InspectionModule";


declare namespace xqdoc="http://www.xqdoc.org/1.0";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute: data-template="app:test" or class="app:test" (deprecated). 
 : The function has to take 2 default parameters. Additional parameters are automatically mapped to
 : any matching request or function parameter.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 : 
 : @author Duncan Paterson
 : @version 0.7
 :)
declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the data-template attribute <code>data-template="app:test"</code>.</p>
};

declare function app:make-func-doc($modules as xs:anyURI*) as element()* {
(:~
: app:make-func-doc reads the xqDoc annotation of a module and stores a markdown version in the doc folder.

: @param $modules the xQuery modules containing the annotation
:
: @returns func-doc.md
:)

let $filename := 'doc-test.md'
let $report := 
    for $module in $modules
    return
        inspect:inspect-module($module)
return
 $report
};

